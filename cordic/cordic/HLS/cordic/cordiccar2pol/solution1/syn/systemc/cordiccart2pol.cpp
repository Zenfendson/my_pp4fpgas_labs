// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cordiccart2pol.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cordiccart2pol::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cordiccart2pol::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state1 = "1";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state2 = "10";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state3 = "100";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state4 = "1000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state5 = "10000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state6 = "100000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state7 = "1000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state8 = "10000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state9 = "100000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state10 = "1000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state11 = "10000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state12 = "100000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<33> cordiccart2pol::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<32> cordiccart2pol::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> cordiccart2pol::ap_const_lv32_8 = "1000";
const sc_lv<32> cordiccart2pol::ap_const_lv32_C = "1100";
const sc_lv<32> cordiccart2pol::ap_const_lv32_1 = "1";
const sc_lv<32> cordiccart2pol::ap_const_lv32_2 = "10";
const sc_lv<32> cordiccart2pol::ap_const_lv32_3 = "11";
const sc_lv<1> cordiccart2pol::ap_const_lv1_0 = "0";
const sc_lv<32> cordiccart2pol::ap_const_lv32_4 = "100";
const sc_lv<32> cordiccart2pol::ap_const_lv32_5 = "101";
const sc_lv<32> cordiccart2pol::ap_const_lv32_D = "1101";
const sc_lv<32> cordiccart2pol::ap_const_lv32_11 = "10001";
const sc_lv<5> cordiccart2pol::ap_const_lv5_0 = "00000";
const sc_lv<32> cordiccart2pol::ap_const_lv32_17 = "10111";
const sc_lv<32> cordiccart2pol::ap_const_lv32_20 = "100000";
const sc_lv<32> cordiccart2pol::ap_const_lv32_9 = "1001";
const sc_lv<32> cordiccart2pol::ap_const_lv32_3FD2C90A = "111111110100101100100100001010";
const sc_lv<32> cordiccart2pol::ap_const_lv32_1E = "11110";
const sc_lv<8> cordiccart2pol::ap_const_lv8_FF = "11111111";
const sc_lv<23> cordiccart2pol::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> cordiccart2pol::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<32> cordiccart2pol::ap_const_lv32_3FC90FDB = "111111110010010000111111011011";
const sc_lv<32> cordiccart2pol::ap_const_lv32_BFC90FDB = "10111111110010010000111111011011";
const sc_lv<5> cordiccart2pol::ap_const_lv5_10 = "10000";
const sc_lv<5> cordiccart2pol::ap_const_lv5_1 = "1";
const sc_lv<32> cordiccart2pol::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> cordiccart2pol::ap_const_lv32_BF800000 = "10111111100000000000000000000000";
const sc_lv<2> cordiccart2pol::ap_const_lv2_0 = "00";
const sc_lv<2> cordiccart2pol::ap_const_lv2_1 = "1";
const sc_lv<5> cordiccart2pol::ap_const_lv5_3 = "11";
const sc_lv<5> cordiccart2pol::ap_const_lv5_4 = "100";
const sc_lv<5> cordiccart2pol::ap_const_lv5_5 = "101";
const sc_lv<1> cordiccart2pol::ap_const_lv1_1 = "1";
const bool cordiccart2pol::ap_const_boolean_1 = true;

cordiccart2pol::cordiccart2pol(sc_module_name name) : sc_module(name), mVcdFile(0) {
    Kvalues_U = new cordiccart2pol_Kvbkb("Kvalues_U");
    Kvalues_U->clk(ap_clk);
    Kvalues_U->reset(ap_rst);
    Kvalues_U->address0(Kvalues_address0);
    Kvalues_U->ce0(Kvalues_ce0);
    Kvalues_U->q0(Kvalues_q0);
    angles_U = new cordiccart2pol_ancud("angles_U");
    angles_U->clk(ap_clk);
    angles_U->reset(ap_rst);
    angles_U->address0(angles_address0);
    angles_U->ce0(angles_ce0);
    angles_U->q0(angles_q0);
    cordiccart2pol_fadEe_U1 = new cordiccart2pol_fadEe<1,5,32,32,32>("cordiccart2pol_fadEe_U1");
    cordiccart2pol_fadEe_U1->clk(ap_clk);
    cordiccart2pol_fadEe_U1->reset(ap_rst);
    cordiccart2pol_fadEe_U1->din0(grp_fu_155_p0);
    cordiccart2pol_fadEe_U1->din1(grp_fu_155_p1);
    cordiccart2pol_fadEe_U1->opcode(grp_fu_155_opcode);
    cordiccart2pol_fadEe_U1->ce(ap_var_for_const0);
    cordiccart2pol_fadEe_U1->dout(grp_fu_155_p2);
    cordiccart2pol_faeOg_U2 = new cordiccart2pol_faeOg<1,5,32,32,32>("cordiccart2pol_faeOg_U2");
    cordiccart2pol_faeOg_U2->clk(ap_clk);
    cordiccart2pol_faeOg_U2->reset(ap_rst);
    cordiccart2pol_faeOg_U2->din0(reg_206);
    cordiccart2pol_faeOg_U2->din1(currenty_2_reg_124);
    cordiccart2pol_faeOg_U2->ce(ap_var_for_const0);
    cordiccart2pol_faeOg_U2->dout(grp_fu_161_p2);
    cordiccart2pol_fmfYi_U3 = new cordiccart2pol_fmfYi<1,4,32,32,32>("cordiccart2pol_fmfYi_U3");
    cordiccart2pol_fmfYi_U3->clk(ap_clk);
    cordiccart2pol_fmfYi_U3->reset(ap_rst);
    cordiccart2pol_fmfYi_U3->din0(grp_fu_166_p0);
    cordiccart2pol_fmfYi_U3->din1(grp_fu_166_p1);
    cordiccart2pol_fmfYi_U3->ce(ap_var_for_const0);
    cordiccart2pol_fmfYi_U3->dout(grp_fu_166_p2);
    cordiccart2pol_fmfYi_U4 = new cordiccart2pol_fmfYi<1,4,32,32,32>("cordiccart2pol_fmfYi_U4");
    cordiccart2pol_fmfYi_U4->clk(ap_clk);
    cordiccart2pol_fmfYi_U4->reset(ap_rst);
    cordiccart2pol_fmfYi_U4->din0(grp_fu_171_p0);
    cordiccart2pol_fmfYi_U4->din1(grp_fu_171_p1);
    cordiccart2pol_fmfYi_U4->ce(ap_var_for_const0);
    cordiccart2pol_fmfYi_U4->dout(grp_fu_171_p2);
    cordiccart2pol_fmfYi_U5 = new cordiccart2pol_fmfYi<1,4,32,32,32>("cordiccart2pol_fmfYi_U5");
    cordiccart2pol_fmfYi_U5->clk(ap_clk);
    cordiccart2pol_fmfYi_U5->reset(ap_rst);
    cordiccart2pol_fmfYi_U5->din0(grp_fu_176_p0);
    cordiccart2pol_fmfYi_U5->din1(angles_load_reg_525);
    cordiccart2pol_fmfYi_U5->ce(ap_var_for_const0);
    cordiccart2pol_fmfYi_U5->dout(grp_fu_176_p2);
    cordiccart2pol_fdg8j_U6 = new cordiccart2pol_fdg8j<1,16,32,32,32>("cordiccart2pol_fdg8j_U6");
    cordiccart2pol_fdg8j_U6->clk(ap_clk);
    cordiccart2pol_fdg8j_U6->reset(ap_rst);
    cordiccart2pol_fdg8j_U6->din0(temp_cos_reg_114);
    cordiccart2pol_fdg8j_U6->din1(ap_var_for_const1);
    cordiccart2pol_fdg8j_U6->ce(ap_var_for_const0);
    cordiccart2pol_fdg8j_U6->dout(grp_fu_180_p2);
    cordiccart2pol_fchbi_U7 = new cordiccart2pol_fchbi<1,2,32,32,1>("cordiccart2pol_fchbi_U7");
    cordiccart2pol_fchbi_U7->clk(ap_clk);
    cordiccart2pol_fchbi_U7->reset(ap_rst);
    cordiccart2pol_fchbi_U7->din0(grp_fu_187_p0);
    cordiccart2pol_fchbi_U7->din1(ap_var_for_const2);
    cordiccart2pol_fchbi_U7->ce(ap_var_for_const0);
    cordiccart2pol_fchbi_U7->opcode(grp_fu_187_opcode);
    cordiccart2pol_fchbi_U7->dout(grp_fu_187_p2);
    cordiccart2pol_fchbi_U8 = new cordiccart2pol_fchbi<1,2,32,32,1>("cordiccart2pol_fchbi_U8");
    cordiccart2pol_fchbi_U8->clk(ap_clk);
    cordiccart2pol_fchbi_U8->reset(ap_rst);
    cordiccart2pol_fchbi_U8->din0(y);
    cordiccart2pol_fchbi_U8->din1(ap_var_for_const2);
    cordiccart2pol_fchbi_U8->ce(ap_var_for_const0);
    cordiccart2pol_fchbi_U8->opcode(ap_var_for_const3);
    cordiccart2pol_fchbi_U8->dout(grp_fu_193_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Kvalues_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln42_fu_374_p1 );

    SC_METHOD(thread_Kvalues_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_and_ln16_fu_247_p2);
    sensitive << ( tmp_1_reg_461 );
    sensitive << ( or_ln16_fu_241_p2 );

    SC_METHOD(thread_and_ln24_fu_287_p2);
    sensitive << ( tmp_6_reg_466 );
    sensitive << ( or_ln24_fu_281_p2 );

    SC_METHOD(thread_and_ln41_fu_414_p2);
    sensitive << ( tmp_10_reg_514 );
    sensitive << ( or_ln41_fu_410_p2 );

    SC_METHOD(thread_angles_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln42_fu_374_p1 );

    SC_METHOD(thread_angles_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_bitcast_ln16_fu_212_p1);
    sensitive << ( x );

    SC_METHOD(thread_bitcast_ln24_fu_252_p1);
    sensitive << ( y );

    SC_METHOD(thread_bitcast_ln41_fu_380_p1);
    sensitive << ( currenty_2_reg_124 );

    SC_METHOD(thread_bitcast_ln54_fu_430_p1);
    sensitive << ( theta1_2_reg_134 );

    SC_METHOD(thread_currentx_fu_308_p1);
    sensitive << ( xor_ln26_fu_302_p2 );

    SC_METHOD(thread_currenty_fu_298_p1);
    sensitive << ( xor_ln33_fu_292_p2 );

    SC_METHOD(thread_grp_fu_155_opcode);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_155_p0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( temp_cos_reg_114 );
    sensitive << ( theta1_2_reg_134 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_155_p1);
    sensitive << ( reg_200 );
    sensitive << ( tmp_3_reg_537 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_166_p0);
    sensitive << ( reg_200 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( currenty_2_reg_124 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_166_p1);
    sensitive << ( factor_reg_519 );
    sensitive << ( select_ln46_fu_419_p3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_171_p0);
    sensitive << ( reg_206 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( temp_cos_reg_114 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_171_p1);
    sensitive << ( factor_reg_519 );
    sensitive << ( select_ln46_fu_419_p3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_176_p0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( and_ln41_fu_414_p2 );

    SC_METHOD(thread_grp_fu_187_opcode);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln39_fu_362_p2 );

    SC_METHOD(thread_grp_fu_187_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( x );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( currenty_2_reg_124 );

    SC_METHOD(thread_i_fu_368_p2);
    sensitive << ( i_0_reg_144 );

    SC_METHOD(thread_icmp_ln16_1_fu_235_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( trunc_ln16_fu_225_p1 );

    SC_METHOD(thread_icmp_ln16_fu_229_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_fu_215_p4 );

    SC_METHOD(thread_icmp_ln24_1_fu_275_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( trunc_ln24_fu_265_p1 );

    SC_METHOD(thread_icmp_ln24_fu_269_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_5_fu_255_p4 );

    SC_METHOD(thread_icmp_ln39_fu_362_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_reg_144 );

    SC_METHOD(thread_icmp_ln41_1_fu_404_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln41_fu_394_p1 );

    SC_METHOD(thread_icmp_ln41_fu_398_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_384_p4 );

    SC_METHOD(thread_or_ln16_fu_241_p2);
    sensitive << ( icmp_ln16_1_fu_235_p2 );
    sensitive << ( icmp_ln16_fu_229_p2 );

    SC_METHOD(thread_or_ln24_1_fu_319_p2);
    sensitive << ( and_ln16_fu_247_p2 );
    sensitive << ( and_ln24_fu_287_p2 );

    SC_METHOD(thread_or_ln24_fu_281_p2);
    sensitive << ( icmp_ln24_1_fu_275_p2 );
    sensitive << ( icmp_ln24_fu_269_p2 );

    SC_METHOD(thread_or_ln41_fu_410_p2);
    sensitive << ( icmp_ln41_reg_504 );
    sensitive << ( icmp_ln41_1_reg_509 );

    SC_METHOD(thread_r);
    sensitive << ( grp_fu_180_p2 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_r_ap_vld);
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_select_ln16_1_fu_332_p3);
    sensitive << ( x );
    sensitive << ( y );
    sensitive << ( and_ln16_fu_247_p2 );

    SC_METHOD(thread_select_ln16_2_fu_346_p3);
    sensitive << ( and_ln16_fu_247_p2 );

    SC_METHOD(thread_select_ln16_fu_312_p3);
    sensitive << ( x );
    sensitive << ( and_ln16_fu_247_p2 );
    sensitive << ( currentx_fu_308_p1 );

    SC_METHOD(thread_select_ln24_1_fu_338_p3);
    sensitive << ( or_ln24_1_fu_319_p2 );
    sensitive << ( select_ln16_1_fu_332_p3 );
    sensitive << ( currenty_fu_298_p1 );

    SC_METHOD(thread_select_ln24_2_fu_354_p3);
    sensitive << ( or_ln24_1_fu_319_p2 );
    sensitive << ( select_ln16_2_fu_346_p3 );

    SC_METHOD(thread_select_ln24_fu_325_p3);
    sensitive << ( y );
    sensitive << ( or_ln24_1_fu_319_p2 );
    sensitive << ( select_ln16_fu_312_p3 );

    SC_METHOD(thread_select_ln46_fu_419_p3);
    sensitive << ( and_ln41_fu_414_p2 );

    SC_METHOD(thread_theta);
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( xor_ln54_fu_434_p2 );

    SC_METHOD(thread_theta_ap_vld);
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_tmp_5_fu_255_p4);
    sensitive << ( bitcast_ln24_fu_252_p1 );

    SC_METHOD(thread_tmp_9_fu_384_p4);
    sensitive << ( bitcast_ln41_fu_380_p1 );

    SC_METHOD(thread_tmp_fu_215_p4);
    sensitive << ( bitcast_ln16_fu_212_p1 );

    SC_METHOD(thread_trunc_ln16_fu_225_p1);
    sensitive << ( bitcast_ln16_fu_212_p1 );

    SC_METHOD(thread_trunc_ln24_fu_265_p1);
    sensitive << ( bitcast_ln24_fu_252_p1 );

    SC_METHOD(thread_trunc_ln41_fu_394_p1);
    sensitive << ( bitcast_ln41_fu_380_p1 );

    SC_METHOD(thread_xor_ln26_fu_302_p2);
    sensitive << ( bitcast_ln24_fu_252_p1 );

    SC_METHOD(thread_xor_ln33_fu_292_p2);
    sensitive << ( bitcast_ln16_fu_212_p1 );

    SC_METHOD(thread_xor_ln54_fu_434_p2);
    sensitive << ( bitcast_ln54_fu_430_p1 );

    SC_METHOD(thread_zext_ln42_fu_374_p1);
    sensitive << ( i_0_reg_144 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln39_fu_362_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const3);

    ap_CS_fsm = "000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cordiccart2pol_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, y, "(port)y");
    sc_trace(mVcdFile, r, "(port)r");
    sc_trace(mVcdFile, r_ap_vld, "(port)r_ap_vld");
    sc_trace(mVcdFile, theta, "(port)theta");
    sc_trace(mVcdFile, theta_ap_vld, "(port)theta_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, Kvalues_address0, "Kvalues_address0");
    sc_trace(mVcdFile, Kvalues_ce0, "Kvalues_ce0");
    sc_trace(mVcdFile, Kvalues_q0, "Kvalues_q0");
    sc_trace(mVcdFile, angles_address0, "angles_address0");
    sc_trace(mVcdFile, angles_ce0, "angles_ce0");
    sc_trace(mVcdFile, angles_q0, "angles_q0");
    sc_trace(mVcdFile, grp_fu_166_p2, "grp_fu_166_p2");
    sc_trace(mVcdFile, reg_200, "reg_200");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_171_p2, "grp_fu_171_p2");
    sc_trace(mVcdFile, reg_206, "reg_206");
    sc_trace(mVcdFile, grp_fu_187_p2, "grp_fu_187_p2");
    sc_trace(mVcdFile, tmp_1_reg_461, "tmp_1_reg_461");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_fu_193_p2, "grp_fu_193_p2");
    sc_trace(mVcdFile, tmp_6_reg_466, "tmp_6_reg_466");
    sc_trace(mVcdFile, select_ln24_fu_325_p3, "select_ln24_fu_325_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, select_ln24_1_fu_338_p3, "select_ln24_1_fu_338_p3");
    sc_trace(mVcdFile, select_ln24_2_fu_354_p3, "select_ln24_2_fu_354_p3");
    sc_trace(mVcdFile, i_fu_368_p2, "i_fu_368_p2");
    sc_trace(mVcdFile, i_reg_489, "i_reg_489");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln39_fu_362_p2, "icmp_ln39_fu_362_p2");
    sc_trace(mVcdFile, icmp_ln41_fu_398_p2, "icmp_ln41_fu_398_p2");
    sc_trace(mVcdFile, icmp_ln41_reg_504, "icmp_ln41_reg_504");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln41_1_fu_404_p2, "icmp_ln41_1_fu_404_p2");
    sc_trace(mVcdFile, icmp_ln41_1_reg_509, "icmp_ln41_1_reg_509");
    sc_trace(mVcdFile, tmp_10_reg_514, "tmp_10_reg_514");
    sc_trace(mVcdFile, factor_reg_519, "factor_reg_519");
    sc_trace(mVcdFile, angles_load_reg_525, "angles_load_reg_525");
    sc_trace(mVcdFile, select_ln46_fu_419_p3, "select_ln46_fu_419_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_176_p2, "grp_fu_176_p2");
    sc_trace(mVcdFile, tmp_3_reg_537, "tmp_3_reg_537");
    sc_trace(mVcdFile, grp_fu_155_p2, "grp_fu_155_p2");
    sc_trace(mVcdFile, theta1_reg_542, "theta1_reg_542");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, grp_fu_161_p2, "grp_fu_161_p2");
    sc_trace(mVcdFile, temp_cos_reg_114, "temp_cos_reg_114");
    sc_trace(mVcdFile, currenty_2_reg_124, "currenty_2_reg_124");
    sc_trace(mVcdFile, theta1_2_reg_134, "theta1_2_reg_134");
    sc_trace(mVcdFile, i_0_reg_144, "i_0_reg_144");
    sc_trace(mVcdFile, zext_ln42_fu_374_p1, "zext_ln42_fu_374_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_fu_180_p2, "grp_fu_180_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, grp_fu_155_p0, "grp_fu_155_p0");
    sc_trace(mVcdFile, grp_fu_155_p1, "grp_fu_155_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_166_p0, "grp_fu_166_p0");
    sc_trace(mVcdFile, grp_fu_166_p1, "grp_fu_166_p1");
    sc_trace(mVcdFile, grp_fu_171_p0, "grp_fu_171_p0");
    sc_trace(mVcdFile, grp_fu_171_p1, "grp_fu_171_p1");
    sc_trace(mVcdFile, grp_fu_176_p0, "grp_fu_176_p0");
    sc_trace(mVcdFile, grp_fu_187_p0, "grp_fu_187_p0");
    sc_trace(mVcdFile, bitcast_ln16_fu_212_p1, "bitcast_ln16_fu_212_p1");
    sc_trace(mVcdFile, tmp_fu_215_p4, "tmp_fu_215_p4");
    sc_trace(mVcdFile, trunc_ln16_fu_225_p1, "trunc_ln16_fu_225_p1");
    sc_trace(mVcdFile, icmp_ln16_1_fu_235_p2, "icmp_ln16_1_fu_235_p2");
    sc_trace(mVcdFile, icmp_ln16_fu_229_p2, "icmp_ln16_fu_229_p2");
    sc_trace(mVcdFile, or_ln16_fu_241_p2, "or_ln16_fu_241_p2");
    sc_trace(mVcdFile, bitcast_ln24_fu_252_p1, "bitcast_ln24_fu_252_p1");
    sc_trace(mVcdFile, tmp_5_fu_255_p4, "tmp_5_fu_255_p4");
    sc_trace(mVcdFile, trunc_ln24_fu_265_p1, "trunc_ln24_fu_265_p1");
    sc_trace(mVcdFile, icmp_ln24_1_fu_275_p2, "icmp_ln24_1_fu_275_p2");
    sc_trace(mVcdFile, icmp_ln24_fu_269_p2, "icmp_ln24_fu_269_p2");
    sc_trace(mVcdFile, or_ln24_fu_281_p2, "or_ln24_fu_281_p2");
    sc_trace(mVcdFile, xor_ln33_fu_292_p2, "xor_ln33_fu_292_p2");
    sc_trace(mVcdFile, xor_ln26_fu_302_p2, "xor_ln26_fu_302_p2");
    sc_trace(mVcdFile, and_ln16_fu_247_p2, "and_ln16_fu_247_p2");
    sc_trace(mVcdFile, currentx_fu_308_p1, "currentx_fu_308_p1");
    sc_trace(mVcdFile, and_ln24_fu_287_p2, "and_ln24_fu_287_p2");
    sc_trace(mVcdFile, or_ln24_1_fu_319_p2, "or_ln24_1_fu_319_p2");
    sc_trace(mVcdFile, select_ln16_fu_312_p3, "select_ln16_fu_312_p3");
    sc_trace(mVcdFile, select_ln16_1_fu_332_p3, "select_ln16_1_fu_332_p3");
    sc_trace(mVcdFile, currenty_fu_298_p1, "currenty_fu_298_p1");
    sc_trace(mVcdFile, select_ln16_2_fu_346_p3, "select_ln16_2_fu_346_p3");
    sc_trace(mVcdFile, bitcast_ln41_fu_380_p1, "bitcast_ln41_fu_380_p1");
    sc_trace(mVcdFile, tmp_9_fu_384_p4, "tmp_9_fu_384_p4");
    sc_trace(mVcdFile, trunc_ln41_fu_394_p1, "trunc_ln41_fu_394_p1");
    sc_trace(mVcdFile, or_ln41_fu_410_p2, "or_ln41_fu_410_p2");
    sc_trace(mVcdFile, and_ln41_fu_414_p2, "and_ln41_fu_414_p2");
    sc_trace(mVcdFile, bitcast_ln54_fu_430_p1, "bitcast_ln54_fu_430_p1");
    sc_trace(mVcdFile, xor_ln54_fu_434_p2, "xor_ln54_fu_434_p2");
    sc_trace(mVcdFile, grp_fu_155_opcode, "grp_fu_155_opcode");
    sc_trace(mVcdFile, grp_fu_187_opcode, "grp_fu_187_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("cordiccart2pol.hdltvin.dat");
    mHdltvoutHandle.open("cordiccart2pol.hdltvout.dat");
}

cordiccart2pol::~cordiccart2pol() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete Kvalues_U;
    delete angles_U;
    delete cordiccart2pol_fadEe_U1;
    delete cordiccart2pol_faeOg_U2;
    delete cordiccart2pol_fmfYi_U3;
    delete cordiccart2pol_fmfYi_U4;
    delete cordiccart2pol_fmfYi_U5;
    delete cordiccart2pol_fdg8j_U6;
    delete cordiccart2pol_fchbi_U7;
    delete cordiccart2pol_fchbi_U8;
}

void cordiccart2pol::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void cordiccart2pol::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void cordiccart2pol::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3FD2C90A;
}

void cordiccart2pol::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv5_5;
}

void cordiccart2pol::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        currenty_2_reg_124 = select_ln24_1_fu_338_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        currenty_2_reg_124 = grp_fu_161_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_144 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i_0_reg_144 = i_reg_489.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        temp_cos_reg_114 = select_ln24_fu_325_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        temp_cos_reg_114 = grp_fu_155_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        theta1_2_reg_134 = select_ln24_2_fu_354_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        theta1_2_reg_134 = theta1_reg_542.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        angles_load_reg_525 = angles_q0.read();
        factor_reg_519 = Kvalues_q0.read();
        icmp_ln41_1_reg_509 = icmp_ln41_1_fu_404_p2.read();
        icmp_ln41_reg_504 = icmp_ln41_fu_398_p2.read();
        tmp_10_reg_514 = grp_fu_187_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_489 = i_fu_368_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        reg_200 = grp_fu_166_p2.read();
        reg_206 = grp_fu_171_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        theta1_reg_542 = grp_fu_155_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_1_reg_461 = grp_fu_187_p2.read();
        tmp_6_reg_466 = grp_fu_193_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        tmp_3_reg_537 = grp_fu_176_p2.read();
    }
}

void cordiccart2pol::thread_Kvalues_address0() {
    Kvalues_address0 =  (sc_lv<4>) (zext_ln42_fu_374_p1.read());
}

void cordiccart2pol::thread_Kvalues_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Kvalues_ce0 = ap_const_logic_1;
    } else {
        Kvalues_ce0 = ap_const_logic_0;
    }
}

void cordiccart2pol::thread_and_ln16_fu_247_p2() {
    and_ln16_fu_247_p2 = (or_ln16_fu_241_p2.read() & tmp_1_reg_461.read());
}

void cordiccart2pol::thread_and_ln24_fu_287_p2() {
    and_ln24_fu_287_p2 = (or_ln24_fu_281_p2.read() & tmp_6_reg_466.read());
}

void cordiccart2pol::thread_and_ln41_fu_414_p2() {
    and_ln41_fu_414_p2 = (or_ln41_fu_410_p2.read() & tmp_10_reg_514.read());
}

void cordiccart2pol::thread_angles_address0() {
    angles_address0 =  (sc_lv<4>) (zext_ln42_fu_374_p1.read());
}

void cordiccart2pol::thread_angles_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        angles_ce0 = ap_const_logic_1;
    } else {
        angles_ce0 = ap_const_logic_0;
    }
}

void cordiccart2pol::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void cordiccart2pol::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void cordiccart2pol::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void cordiccart2pol::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void cordiccart2pol::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void cordiccart2pol::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void cordiccart2pol::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void cordiccart2pol::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void cordiccart2pol::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void cordiccart2pol::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void cordiccart2pol::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void cordiccart2pol::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void cordiccart2pol::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void cordiccart2pol::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cordiccart2pol::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cordiccart2pol::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cordiccart2pol::thread_bitcast_ln16_fu_212_p1() {
    bitcast_ln16_fu_212_p1 = x.read();
}

void cordiccart2pol::thread_bitcast_ln24_fu_252_p1() {
    bitcast_ln24_fu_252_p1 = y.read();
}

void cordiccart2pol::thread_bitcast_ln41_fu_380_p1() {
    bitcast_ln41_fu_380_p1 = currenty_2_reg_124.read();
}

void cordiccart2pol::thread_bitcast_ln54_fu_430_p1() {
    bitcast_ln54_fu_430_p1 = theta1_2_reg_134.read();
}

void cordiccart2pol::thread_currentx_fu_308_p1() {
    currentx_fu_308_p1 = xor_ln26_fu_302_p2.read();
}

void cordiccart2pol::thread_currenty_fu_298_p1() {
    currenty_fu_298_p1 = xor_ln33_fu_292_p2.read();
}

void cordiccart2pol::thread_grp_fu_155_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_155_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_155_opcode = ap_const_lv2_0;
    } else {
        grp_fu_155_opcode = "XX";
    }
}

void cordiccart2pol::thread_grp_fu_155_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_155_p0 = temp_cos_reg_114.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_155_p0 = theta1_2_reg_134.read();
    } else {
        grp_fu_155_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void cordiccart2pol::thread_grp_fu_155_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_155_p1 = reg_200.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_155_p1 = tmp_3_reg_537.read();
    } else {
        grp_fu_155_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void cordiccart2pol::thread_grp_fu_166_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_166_p0 = reg_200.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_166_p0 = currenty_2_reg_124.read();
    } else {
        grp_fu_166_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void cordiccart2pol::thread_grp_fu_166_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_166_p1 = factor_reg_519.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_166_p1 = select_ln46_fu_419_p3.read();
    } else {
        grp_fu_166_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void cordiccart2pol::thread_grp_fu_171_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_171_p0 = reg_206.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_171_p0 = temp_cos_reg_114.read();
    } else {
        grp_fu_171_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void cordiccart2pol::thread_grp_fu_171_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_fu_171_p1 = factor_reg_519.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_171_p1 = select_ln46_fu_419_p3.read();
    } else {
        grp_fu_171_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void cordiccart2pol::thread_grp_fu_176_p0() {
    grp_fu_176_p0 = (!and_ln41_fu_414_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln41_fu_414_p2.read()[0].to_bool())? ap_const_lv32_3F800000: ap_const_lv32_BF800000);
}

void cordiccart2pol::thread_grp_fu_187_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln39_fu_362_p2.read(), ap_const_lv1_0))) {
        grp_fu_187_opcode = ap_const_lv5_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        grp_fu_187_opcode = ap_const_lv5_3;
    } else {
        grp_fu_187_opcode =  (sc_lv<5>) ("XXXXX");
    }
}

void cordiccart2pol::thread_grp_fu_187_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_187_p0 = currenty_2_reg_124.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_187_p0 = x.read();
    } else {
        grp_fu_187_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void cordiccart2pol::thread_i_fu_368_p2() {
    i_fu_368_p2 = (!i_0_reg_144.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_144.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void cordiccart2pol::thread_icmp_ln16_1_fu_235_p2() {
    icmp_ln16_1_fu_235_p2 = (!trunc_ln16_fu_225_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln16_fu_225_p1.read() == ap_const_lv23_0);
}

void cordiccart2pol::thread_icmp_ln16_fu_229_p2() {
    icmp_ln16_fu_229_p2 = (!tmp_fu_215_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_215_p4.read() != ap_const_lv8_FF);
}

void cordiccart2pol::thread_icmp_ln24_1_fu_275_p2() {
    icmp_ln24_1_fu_275_p2 = (!trunc_ln24_fu_265_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln24_fu_265_p1.read() == ap_const_lv23_0);
}

void cordiccart2pol::thread_icmp_ln24_fu_269_p2() {
    icmp_ln24_fu_269_p2 = (!tmp_5_fu_255_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_5_fu_255_p4.read() != ap_const_lv8_FF);
}

void cordiccart2pol::thread_icmp_ln39_fu_362_p2() {
    icmp_ln39_fu_362_p2 = (!i_0_reg_144.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_144.read() == ap_const_lv5_10);
}

void cordiccart2pol::thread_icmp_ln41_1_fu_404_p2() {
    icmp_ln41_1_fu_404_p2 = (!trunc_ln41_fu_394_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln41_fu_394_p1.read() == ap_const_lv23_0);
}

void cordiccart2pol::thread_icmp_ln41_fu_398_p2() {
    icmp_ln41_fu_398_p2 = (!tmp_9_fu_384_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_9_fu_384_p4.read() != ap_const_lv8_FF);
}

void cordiccart2pol::thread_or_ln16_fu_241_p2() {
    or_ln16_fu_241_p2 = (icmp_ln16_1_fu_235_p2.read() | icmp_ln16_fu_229_p2.read());
}

void cordiccart2pol::thread_or_ln24_1_fu_319_p2() {
    or_ln24_1_fu_319_p2 = (and_ln16_fu_247_p2.read() | and_ln24_fu_287_p2.read());
}

void cordiccart2pol::thread_or_ln24_fu_281_p2() {
    or_ln24_fu_281_p2 = (icmp_ln24_1_fu_275_p2.read() | icmp_ln24_fu_269_p2.read());
}

void cordiccart2pol::thread_or_ln41_fu_410_p2() {
    or_ln41_fu_410_p2 = (icmp_ln41_1_reg_509.read() | icmp_ln41_reg_504.read());
}

void cordiccart2pol::thread_r() {
    r = grp_fu_180_p2.read();
}

void cordiccart2pol::thread_r_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        r_ap_vld = ap_const_logic_1;
    } else {
        r_ap_vld = ap_const_logic_0;
    }
}

void cordiccart2pol::thread_select_ln16_1_fu_332_p3() {
    select_ln16_1_fu_332_p3 = (!and_ln16_fu_247_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln16_fu_247_p2.read()[0].to_bool())? y.read(): x.read());
}

void cordiccart2pol::thread_select_ln16_2_fu_346_p3() {
    select_ln16_2_fu_346_p3 = (!and_ln16_fu_247_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln16_fu_247_p2.read()[0].to_bool())? ap_const_lv32_0: ap_const_lv32_3FC90FDB);
}

void cordiccart2pol::thread_select_ln16_fu_312_p3() {
    select_ln16_fu_312_p3 = (!and_ln16_fu_247_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln16_fu_247_p2.read()[0].to_bool())? x.read(): currentx_fu_308_p1.read());
}

void cordiccart2pol::thread_select_ln24_1_fu_338_p3() {
    select_ln24_1_fu_338_p3 = (!or_ln24_1_fu_319_p2.read()[0].is_01())? sc_lv<32>(): ((or_ln24_1_fu_319_p2.read()[0].to_bool())? select_ln16_1_fu_332_p3.read(): currenty_fu_298_p1.read());
}

void cordiccart2pol::thread_select_ln24_2_fu_354_p3() {
    select_ln24_2_fu_354_p3 = (!or_ln24_1_fu_319_p2.read()[0].is_01())? sc_lv<32>(): ((or_ln24_1_fu_319_p2.read()[0].to_bool())? select_ln16_2_fu_346_p3.read(): ap_const_lv32_BFC90FDB);
}

void cordiccart2pol::thread_select_ln24_fu_325_p3() {
    select_ln24_fu_325_p3 = (!or_ln24_1_fu_319_p2.read()[0].is_01())? sc_lv<32>(): ((or_ln24_1_fu_319_p2.read()[0].to_bool())? select_ln16_fu_312_p3.read(): y.read());
}

void cordiccart2pol::thread_select_ln46_fu_419_p3() {
    select_ln46_fu_419_p3 = (!and_ln41_fu_414_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln41_fu_414_p2.read()[0].to_bool())? ap_const_lv32_3F800000: ap_const_lv32_BF800000);
}

void cordiccart2pol::thread_theta() {
    theta = xor_ln54_fu_434_p2.read();
}

void cordiccart2pol::thread_theta_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        theta_ap_vld = ap_const_logic_1;
    } else {
        theta_ap_vld = ap_const_logic_0;
    }
}

void cordiccart2pol::thread_tmp_5_fu_255_p4() {
    tmp_5_fu_255_p4 = bitcast_ln24_fu_252_p1.read().range(30, 23);
}

void cordiccart2pol::thread_tmp_9_fu_384_p4() {
    tmp_9_fu_384_p4 = bitcast_ln41_fu_380_p1.read().range(30, 23);
}

void cordiccart2pol::thread_tmp_fu_215_p4() {
    tmp_fu_215_p4 = bitcast_ln16_fu_212_p1.read().range(30, 23);
}

void cordiccart2pol::thread_trunc_ln16_fu_225_p1() {
    trunc_ln16_fu_225_p1 = bitcast_ln16_fu_212_p1.read().range(23-1, 0);
}

void cordiccart2pol::thread_trunc_ln24_fu_265_p1() {
    trunc_ln24_fu_265_p1 = bitcast_ln24_fu_252_p1.read().range(23-1, 0);
}

void cordiccart2pol::thread_trunc_ln41_fu_394_p1() {
    trunc_ln41_fu_394_p1 = bitcast_ln41_fu_380_p1.read().range(23-1, 0);
}

void cordiccart2pol::thread_xor_ln26_fu_302_p2() {
    xor_ln26_fu_302_p2 = (bitcast_ln24_fu_252_p1.read() ^ ap_const_lv32_80000000);
}

void cordiccart2pol::thread_xor_ln33_fu_292_p2() {
    xor_ln33_fu_292_p2 = (bitcast_ln16_fu_212_p1.read() ^ ap_const_lv32_80000000);
}

void cordiccart2pol::thread_xor_ln54_fu_434_p2() {
    xor_ln54_fu_434_p2 = (bitcast_ln54_fu_430_p1.read() ^ ap_const_lv32_80000000);
}

void cordiccart2pol::thread_zext_ln42_fu_374_p1() {
    zext_ln42_fu_374_p1 = esl_zext<64,5>(i_0_reg_144.read());
}

void cordiccart2pol::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln39_fu_362_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<33>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void cordiccart2pol::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"x\" :  \"" << x.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"y\" :  \"" << y.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"r\" :  \"" << r.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"r_ap_vld\" :  \"" << r_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"theta\" :  \"" << theta.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"theta_ap_vld\" :  \"" << theta_ap_vld.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

